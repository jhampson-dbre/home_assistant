- name: Ensure ssh directory exists for current user on the control machine
  file:
    path: "{{ lookup('env','HOME') + '/.ssh' }}"
    mode: "0700"
  become: no
  delegate_to: localhost
  run_once: true

- name: Check if SSH keypair already exists
  stat:
    path: "{{ key_file }}"
  register: existing_ssh_key
  become: no
  delegate_to: localhost
  run_once: true
  loop:
    - "{{ lookup('env','HOME') + '/.ssh/' + preinstall_config_ssh_key_name }}"
    - "{{ lookup('env','HOME') + '/.ssh/' + preinstall_config_ssh_key_name + '.pub' }}"
  loop_control:
    loop_var: key_file

- name: Backup existing SSH private key if we need new keys
  copy:
    src: "{{ key_file.stat.path }}"
    dest: "{{ key_file.stat.path + '.bak' }}"
    backup: yes
    mode: '0600'
  loop: "{{ existing_ssh_key.results }}"
  loop_control:
    loop_var: key_file
  when:
    - key_file.stat.exists | bool
    - (not existing_ssh_key.results[0].stat.exists | bool
      or not existing_ssh_key.results[1].stat.exists | bool)
  become: no
  delegate_to: localhost
  run_once: true

- name: Create SSH key pair on the control machine to connect using home assistant user
  openssh_keypair:
    path: "{{ lookup('env','HOME') + '/.ssh/' + preinstall_config_ssh_key_name }}"
    comment: "homeassistant"
  when: >-
    not existing_ssh_key.results[0].stat.exists | bool
    or not existing_ssh_key.results[1].stat.exists | bool
  become: no
  delegate_to: localhost
  run_once: true

- name: Add public key to home assistant user authorized keys
  authorized_key:
    user: "{{ home_assistant_user }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/' + preinstall_config_ssh_key_name + '.pub') }}"
