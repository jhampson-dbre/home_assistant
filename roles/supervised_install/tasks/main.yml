---
- name: Ensure we are running on OS with apt package manager
  assert:
    that:
      - ansible_pkg_mgr == "apt"
    fail_msg: "Expected 'apt' package manager, but got {{ ansible_pkg_mgr }}. Only Debian-based distros are supported"

- name: Install role requirements
  import_tasks: requirements.yml
  when: supervised_install_ansible_requirements|bool

- name: Install OS package prereqs # noqa 403
  apt:
    name:
      - systemd
      - network-manager
      - apparmor
      - jq
      - curl
      - dbus
    state: latest
    update_cache: yes

- name: Disable Modem Manager to prevent issues when using serial devices
  service:
    name: ModemManager
    enabled: no
    state: stopped

- name: Make temp directory for downloading Network Manager and Docker config files
  tempfile:
    state: directory
    suffix: supervised_config
  run_once: true
  delegate_to: localhost
  register: temp_config_dir
  become: no
  notify:
    - cleanup temp dir

- name: Download NetworkManager and Docker config files
  get_url:
    url: https://raw.githubusercontent.com/home-assistant/supervised-installer/master/files/{{ config_file_name }}
    dest: "{{ temp_config_dir.path }}/{{ config_file_name }}"
    mode: "0440"
  loop:
    - NetworkManager.conf
    - docker_daemon.json
    - interfaces
    - system-connection-default
  loop_control:
    loop_var: config_file_name
  run_once: true
  delegate_to: localhost
  become: no

- name: Create Docker config directory
  file:
    path: /etc/docker
    state: directory
    mode: "0755"

- name: Set up docker config file
  copy:
    src: "{{ temp_config_dir.path }}/docker_daemon.json"
    dest: /etc/docker/daemon.json
    mode: "0644"
  notify:
    - restart docker

- name: Fix kernel dmesg restriction
  sysctl:
    name: kernel.dmesg_restrict
    value: "0"
    sysctl_set: yes
    state: present
    reload: yes

- name: Create config for NetworkManager
  copy:
    src: "{{ networkmanager_file['source'] }}"
    dest: "{{ networkmanager_file['target'] }}"
    mode: "0644"
  loop:
    - source: "{{ temp_config_dir.path }}/NetworkManager.conf"
      target: /etc/NetworkManager/NetworkManager.conf
    - source: "{{ temp_config_dir.path }}/system-connection-default"
      target: /etc/NetworkManager/system-connections/default
  loop_control:
    loop_var: networkmanager_file
    label: "{{ networkmanager_file['source'] }}"
  notify:
    - restart networkmanager

- name: Overwrite network interfaces file
  copy:
    src: "{{ temp_config_dir.path }}/interfaces"
    dest: /etc/network/interfaces
    mode: "0644"
  notify:
    - restart networkmanager

- name: Ensure all changed service are restarted
  meta: flush_handlers

- name: Get download url for latest os-agent .deb release
  shell: |
    curl -s https://api.github.com/repos/home-assistant/os-agent/releases/latest \
    | grep "browser_download_url.*{{ arch[ansible_architecture]['os_agent'] }}.deb" \
    | cut -d : -f 2,3 \
    | tr -d \"
  register: os_agent_latest_url
  failed_when: os_agent_latest_url.stdout is not search('os-agent_.*_linux_.*.deb')
  changed_when: false
  check_mode: no
  args:
    warn: false

- name: Install os-agent
  apt:
    deb: "{{ os_agent_latest_url.stdout|trim }}"

- name: Init folders
  file:
    path: "{{ data_share }}"
    state: directory
    mode: "0755"

- name: Write config
  template:
    src: hassio.j2
    dest: "{{ config }}"
    mode: "0644"

- name: Read version infos from web
  uri:
    body_format: json
    url: https://version.home-assistant.io/stable.json
  register: hassio_stable_out

- name: Set hassio_version fact
  set_fact:
    hassio_version: "{{ hassio_stable_out['json']['supervisor'] }}"

- name: Install supervisor Docker container
  docker_image:
    name: "{{ arch[ansible_architecture]['hassio_docker'] }}:{{ hassio_version }}"
    source: pull
    state: present

- name: Add tag latest to supervisor image
  docker_image:
    name: "{{ arch[ansible_architecture]['hassio_docker'] }}:{{ hassio_version }}"
    repository: "{{ arch[ansible_architecture]['hassio_docker'] }}:latest"
    # As 'latest' usually already is present, we need to enable overwriting of existing tags
    force_tag: yes
    source: local

- name: Make temp directory for downloading Home Assistant config files
  tempfile:
    state: directory
    suffix: supervised_config
  run_once: true
  delegate_to: localhost
  register: temp_config_dir
  become: no
  notify:
    - cleanup temp dir

- name: Download Home Assistant config files
  get_url:
    url: https://raw.githubusercontent.com/home-assistant/supervised-installer/master/files/{{ config_file_name }}
    dest: "{{ temp_config_dir.path }}/{{ config_file_name }}"
    mode: "0440"
  become: no
  loop:
    - ha
    - hassio-apparmor
    - hassio-apparmor.service
    - hassio-supervisor
    - hassio-supervisor.service
  loop_control:
    loop_var: config_file_name
  run_once: true
  delegate_to: localhost

- name: Install supervisor startup script
  template:
    src: "{{ temp_config_dir.path }}/hassio-supervisor"
    dest: "{{ prefix }}/sbin/hassio-supervisor"
    mode: a+x
    variable_start_string: "%%"
    variable_end_string: "%%"

- name: Install supervisor service file
  template:
    src: "{{ temp_config_dir.path }}/hassio-supervisor.service"
    dest: "{{ sysconfdir }}/systemd/system/hassio-supervisor.service"
    mode: "0644"
    variable_start_string: "%%"
    variable_end_string: "%%"

- name: Enable supervisor service
  service:
    name: hassio-supervisor
    enabled: yes

- name: Create AppArmor directory
  file:
    path: "{{ data_share }}/apparmor"
    state: directory
    mode: "0755"

- name: Install AppArmor startup script
  template:
    src: "{{ temp_config_dir.path }}/hassio-apparmor"
    dest: "{{ prefix }}/sbin/hassio-apparmor"
    mode: a+x
    variable_start_string: "%%"
    variable_end_string: "%%"

- name: Install AppArmor service file
  template:
    src: "{{ temp_config_dir.path }}/hassio-apparmor.service"
    dest: "{{ sysconfdir }}/systemd/system/hassio-apparmor.service"
    mode: "0644"
    variable_start_string: "%%"
    variable_end_string: "%%"

- name: Download AppArmor profile
  get_url:
    url: https://version.home-assistant.io/apparmor.txt
    dest: "{{ data_share }}/apparmor/hassio-supervisor"
    mode: "0644"

- name: Enable and start AppArmor service
  service:
    name: hassio-apparmor
    enabled: yes
    state: started

# AppArmor service must be started before Home Assistant service
- name: Start Home Assistant Supervised
  service:
    name: hassio-supervisor
    state: started

- name: Install the 'ha' cli
  copy:
    src: "{{ temp_config_dir.path }}/ha"
    dest: "{{ prefix }}/bin/ha"
    mode: a+x

- name: Home Assistant supervised is now installed
  debug:
    msg:
      - "First setup will take some time, when it's ready you can reach it here:"
      - "http://{{ ansible_default_ipv4['address'] }}:8123"
